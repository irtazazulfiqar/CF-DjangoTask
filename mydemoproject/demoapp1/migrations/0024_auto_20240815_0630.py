# Generated by Django 5.0.7 on 2024-08-15 06:30

from django.db import migrations
from django.contrib.auth.models import Group, Permission
from django.contrib.contenttypes.models import ContentType


def create_new_groups_and_permissions(apps, schema_editor):
    # Get models and content types
    Book = apps.get_model('demoapp1', 'Book')
    BorrowedBook = apps.get_model('demoapp1', 'BorrowedBook')
    Inventory = apps.get_model('demoapp1', 'Inventory')
    User = apps.get_model('demoapp1', 'User')

    book_ct = ContentType.objects.get_for_model(Book)
    borrowedbook_ct = ContentType.objects.get_for_model(BorrowedBook)
    inventory_ct = ContentType.objects.get_for_model(Inventory)
    user_ct = ContentType.objects.get_for_model(User)

    # Delete old groups
    Group.objects.filter(name__in=['newuser', 'olduser']).delete()

    # Create new groups
    user_group, _ = Group.objects.get_or_create(name='user')
    admin_group, _ = Group.objects.get_or_create(name='admin')

    # Create permissions (if they don't exist already)
    view_book_user = Permission.objects.get_or_create(
        codename='view_book_newuser',
        name='Can view books',
        content_type=book_ct,
    )[0]

    view_borrowedbook_user = Permission.objects.get_or_create(
        codename='view_borrowedbook_newuser',
        name='Can view borrowed books',
        content_type=borrowedbook_ct,
    )[0]

    view_inventory = Permission.objects.get_or_create(
        codename='view_inventory',
        name='Can view inventory',
        content_type=inventory_ct,
    )[0]

    add_book = Permission.objects.get_or_create(
        codename='add_book',
        name='Can add books',
        content_type=book_ct,
    )[0]

    change_book = Permission.objects.get_or_create(
        codename='change_book',
        name='Can change books',
        content_type=book_ct,
    )[0]

    delete_book = Permission.objects.get_or_create(
        codename='delete_book',
        name='Can delete books',
        content_type=book_ct,
    )[0]

    # Assign permissions to groups
    user_group.permissions.add(view_book_user, view_borrowedbook_user, view_inventory)
    admin_group.permissions.add(view_book_user, add_book, change_book, delete_book, view_borrowedbook_user, view_inventory)


def remove_new_groups_and_permissions(apps, schema_editor):
    # Delete the new groups
    Group.objects.filter(name__in=['user', 'admin']).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('demoapp1', '0023_alter_user_managers_remove_user_role_book_created_at_and_more'),
    ]

    operations = [
        migrations.RunPython(create_new_groups_and_permissions, remove_new_groups_and_permissions),
    ]
